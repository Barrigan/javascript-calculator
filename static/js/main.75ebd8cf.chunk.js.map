{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttons","id","value","App","props","buttonPressed","event","myState","display01","this","state","display02","operations","newOp","disp1Limit","disp2Limit","target","updateDisplay","addDotToDisplay","calculate","addSMDActionToDisplay","addMinusActionToDisplay","clearDisplay","length","$","document","ready","removeClass","addClass","inputVal","isNaN","Number","concat","setState","indexOf","action","search","push","pop","disp02","i","console","log","toString","finalOps","execMultDiv","result","execSumRests","arr","resArr","temp","bind","className","class","map","button","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75ebd8cf.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport $ from \"jquery\";\n\nconst buttons = [\n  { id: \"clear\",\n    value: \"AC\"\n  },\n  { id: \"divide\",\n    value: \"/\"\n  },\n  { id: \"multiply\",\n    value: \"*\"\n  },\n  { id: \"subtract\",\n    value: \"-\"\n  },\n  { id: \"seven\",\n    value: \"7\"\n  },\n  { id: \"eight\",\n    value: \"8\"\n  },\n  { id: \"nine\",\n    value: \"9\"\n  },\n  { id: \"add\",\n    value: \"+\"\n  },\n  { id: \"four\",\n    value: \"4\"\n  },\n  { id: \"five\",\n    value: \"5\"\n  },\n  { id: \"six\",\n    value: \"6\"\n  },\n  { id: \"one\",\n    value: \"1\"\n  },\n  { id: \"two\",\n    value: \"2\"\n  },\n  { id: \"three\",\n    value: \"3\"\n  },\n  { id: \"equals\",\n    value: \"=\"\n  },\n  { id: \"zero\",\n    value: \"0\"\n  },\n  { id: \"decimal\",\n    value: \".\"\n  }\n];\n\n\n//Not necessary but I'll keep it.\nfunction isNumber (str) { \n  if(str.search(/^([0-9]*\\.[0-9]*|[0-9]*)$/gm) == -1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      display01: \"0\",\n      display02: \"0\",\n      operations: [],\n      newOp : true,\n      disp1Limit: false,\n      disp2Limit: false\n    };\n\n    this.buttonPressed = this.buttonPressed.bind(this);\n  }\n\n  buttonPressed = function(event) {\n    let myState = {\n      display01: this.state.display01,\n      display02: this.state.display02,\n      operations: this.state.operations,\n      newOp : this.state.newOp,\n      disp1Limit: this.state.disp1Limit,\n      disp2Limit: this.state.disp2Limit\n    };\n\n    switch(event.target.value) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \"0\":\n        this.updateDisplay(myState, event.target.value);\n        break;\n      case \".\":\n        this.addDotToDisplay(myState);\n        break;\n      case \"=\":\n        this.calculate(myState);\n        break;\n      case \"+\":\n      case \"*\":\n      case \"/\":\n        this.addSMDActionToDisplay(myState, event.target.value);\n        break;\n      case \"-\":\n        this.addMinusActionToDisplay(myState);\n        break;\n      case \"AC\":\n        this.clearDisplay();\n        break;\n    }\n\n    //RESIZING DISPLAY02'S DIV IF THE NUMBER GOES TO LONG\n    if(this.state.display02.length <= 40) {\n      $(document).ready(function(){\n        $(\"#display2\").removeClass(\"bigDisplay\");\n        $(\"#display2\").removeClass(\"biggerDisplay\");\n      });\n    } else if(this.state.display02.length <= 60) {\n      $(document).ready(function(){\n        $(\"#display2\").addClass(\"bigDisplay\");\n        $(\"#display2\").removeClass(\"biggerDisplay\");\n      });\n    } else {\n      $(document).ready(function(){\n        $(\"#display2\").addClass(\"biggerDisplay\");\n      });\n    }\n    /*\n    //CHECKING THAT DISPLAY01 NUMBER IS NOT TOO BIG\n    if(this.state.display01.length > 20) {\n      let tempDisplay = this.state.display01;\n      this.setState ({ display01 : \"DIGITS LIMIT REACHED\"});\n      setTimeout(() => this.setState({ display01: tempDisplay }), 1000);\n    }\n    */\n  }\n\n  updateDisplay = function(myState, inputVal) {\n    if(myState.newOp){\n      myState.display01 = inputVal;\n      myState.newOp = false;\n    } else {\n      if(myState.display01 == \"0\" || myState.display01 == \"+\" || myState.display01 == \"*\" || myState.display01 == \"/\") {\n        myState.display01 = inputVal;\n      } else if(myState.display01 == \"-\") { \n        if (!isNaN(Number(myState.operations[myState.operations.length-1])) || myState.operations[myState.operations.length-1] == \"-\") {\n          myState.display01 = inputVal;\n        } else {\n          myState.display01 = myState.display01.concat(inputVal);\n        }\n      }else {\n        myState.display01 = myState.display01.concat(inputVal);\n      }\n    }\n    this.setState({\n      display01: myState.display01,\n      display02: myState.display02,\n      operations: myState.operations,\n      newOp : myState.newOp,\n      disp1Limit: myState.disp1Limit,\n      disp2Limit: myState.disp2Limit\n    });\n  }\n\n  addDotToDisplay = function(myState) {\n    if(myState.newOp){\n      myState.display01 = \"0.\";\n      myState.newOp = false;\n    } else {\n      if(myState.display01.indexOf(\".\") == -1) {\n        if(myState.display01 == \"+\" || myState.display01 == \"/\" || myState.display01 == \"*\" || (myState.display01 == \"-\" && myState.operations[myState.operations.length-1] == \"-\")) {\n          myState.display01= \"0.\";\n        } else if (myState.display01 == \"-\" && (myState.operations[myState.operations.length-1] == \"+\" || myState.operations[myState.operations.length-1] == \"*\" || myState.operations[myState.operations.length-1] == \"/\" )) {\n          myState.display01 = \"-0.\";\n        } else {\n          myState.display01 = myState.display01.concat(\".\");\n        }\n      }\n    }\n\n    this.setState({\n      display01: myState.display01,\n      display02: myState.display02,\n      operations: myState.operations,\n      newOp : myState.newOp,\n      disp1Limit: myState.disp1Limit,\n      disp2Limit: myState.disp2Limit\n    });\n\n  }\n\n  clearDisplay = function() {\n    this.setState({\n      display01: \"0\",\n      display02: \"0\",\n      operations : [],\n      newOp: true\n  });\n  }\n\n  addSMDActionToDisplay = function(myState, action) {\n    if(myState.newOp){\n      myState.newOp = false;\n    }\n    if (myState.display02.search(\"=\") != -1) {\n      myState.display02 = myState.display01.concat(action);\n      myState.operations = [myState.display01];\n      myState.operations.push(action);\n      myState.display01 = action;\n    } else if(isNaN(Number(myState.display01))) {\n      //actions with operator on display1\n      myState.operations.pop();\n      myState.operations.push(action);\n      let disp02 = \"\";\n      for(let i=0; i < myState.display02.length-1;i++) {\n        disp02 = disp02.concat(myState.display02[i])\n      }\n      console.log(\"disp02: \", disp02);\n      myState.display02 = disp02.concat(action);\n      myState.display01 = action\n      //Actions with numbers on display1\n    } else {\n      if(myState.display02 == \"0\") {\n        myState.operations = [myState.display01, action];\n        myState.display02 = Number(myState.display01).toString().concat(action);\n        myState.display01 = action;\n        console.log(\"operations1: \", myState.operations);\n      } else if (!isNaN(Number(myState.display02))) {\n        myState.operations = [...myState.operations, action];\n        myState.display02  = Number(myState.display02).toString().concat(action);\n        myState.display01 = action;\n      } else {\n        myState.operations = [...myState.operations, myState.display01, action];\n        myState.display02 = myState.display02.concat(Number(myState.display01).toString().concat(action));\n        myState.display01 = action;\n        console.log(\"operations2: \", myState.operations);\n      }\n    }\n\n    this.setState({\n      display01: myState.display01,\n      display02: myState.display02,\n      operations: myState.operations,\n      newOp : myState.newOp,\n      disp1Limit: myState.disp1Limit,\n      disp2Limit: myState.disp2Limit\n    });\n\n  }\n\n  addMinusActionToDisplay = function(myState) {\n    if(myState.newOp){\n      myState.newOp = false;\n    }\n    if (myState.display02.search(\"=\") != -1) {\n      myState.display02 = myState.display01.concat(\"-\");\n      myState.operations = [myState.display01];\n      myState.operations.push(\"-\");\n      myState.display01 = \"-\";\n    } else if(myState.display01 == \"+\" || myState.display01 == \"*\" || myState.display01 == \"/\") {\n      myState.display01 = \"-\";\n    } else {\n      if(myState.display02 == \"0\") {\n        myState.operations = [myState.display01, \"-\"];\n        myState.display02 = Number(myState.display01).toString().concat(\"-\");\n        myState.display01 = \"-\";\n      } else if (!isNaN(Number(myState.display02))) {\n        myState.operations = [...myState.operations, \"-\"];\n        myState.display02 = Number(myState.display02).toString().concat(\"-\");\n        myState.display01 = \"-\";\n      } else {\n      myState.operations = [...myState.operations, myState.display01, \"-\"];\n        myState.display02 = myState.display02.concat(Number(myState.display01).toString().concat(\"-\"));\n        myState.display01 = \"-\";\n      }\n    }\n\n    this.setState({\n      display01: myState.display01,\n      display02: myState.display02,\n      operations: myState.operations,\n      newOp : myState.newOp,\n      disp1Limit: myState.disp1Limit,\n      disp2Limit: myState.disp2Limit\n    });\n\n  }\n\n  calculate = function(myState){\n    if(!myState.newOp) {\n      let finalOps = [];\n      //There is only one number introduced\n      if(!isNaN(Number(myState.display02)) || myState.display02.search(\"=\") != -1) {\n        myState.display02 = myState.display01.concat(\"=\");\n        myState.operations = [myState.display01];\n        myState.newOp = true;\n        finalOps = myState.operations;\n      } else if(isNaN(Number(myState.operations[myState.operations.length-1]))){\n        if(isNaN(Number(myState.display01))) {\n          myState.operations.pop();\n          let disp02 = \"\";\n          for(let i=0; i<myState.display02.length-1;i++) {\n            disp02 = disp02.concat(myState.display02[i])\n          }\n          myState.display02 = disp02.concat(\"=\");\n          myState.newOp = true;\n          finalOps = myState.operations;\n        } else {\n          myState.operations.push(myState.display01);\n          myState.display02 = myState.display02.concat(myState.display01).concat(\"=\");\n          myState.newOp = true;\n          finalOps = myState.operations;\n        }\n      }\n      //FINAL CALCULATIONS\n      finalOps = this.execMultDiv(finalOps);\n      let result = this.execSumRests(finalOps);\n      myState.display02 = myState.display02.concat(result);\n      myState.display01 = result;\n      myState.newOp = true;\n      myState.operations = [];\n      \n      this.setState({\n        display01: myState.display01,\n        display02: myState.display02,\n        operations: myState.operations,\n        newOp : myState.newOp,\n        disp1Limit: myState.disp1Limit,\n        disp2Limit: myState.disp2Limit\n      });\n    }\n  }\n\n  execMultDiv = function(arr) {\n    let resArr = [];\n    let temp = \"empty\";\n    for(let i = 0; i < arr.length; i += 2){\n      console.log(\"index: \", i);\n      if(i == arr.length-1) {\n        if(temp == \"empty\") {\n          resArr.push(arr[i]);\n        } else {\n          resArr.push(temp);\n        }\n      } else {\n        if(arr[i+1] == \"*\") {\n          if(temp == \"empty\") {\n            temp = (Number(arr[i]) * Number(arr[i+2])).toString();\n          } else {\n            temp = (Number(temp) * Number(arr[i+2])).toString();\n          }\n        } else if (arr[i+1] == \"/\"){\n          if(temp == \"empty\") {\n            temp = (Number(arr[i]) / Number(arr[i+2])).toString();\n          } else {\n            temp = (Number(temp) / Number(arr[i+2])).toString();\n          }\n        } else {\n          if(temp == \"empty\") {\n            resArr.push(arr[i]);\n            resArr.push(arr[i+1]);\n            temp = \"empty\";\n          } else {\n            resArr.push(temp);\n            resArr.push(arr[i+1]);\n            temp = \"empty\";\n          }\n        }\n      }\n    }\n    console.log(\"resArr: \", resArr);\n    return resArr;\n  }\n\n  execSumRests = function(arr) {\n    \n    if(arr.length == 1) {\n      return arr[0].toString();\n    } else {\n      let result = Number(arr[0]);\n      for(let i = 0; i < arr.length-1; i += 2) {\n        if(arr[i+1] == \"+\") {\n          result += Number(arr[i+2]);\n        } else if(arr[i+1] == \"-\") {\n          result -= Number(arr[i+2]);\n        }\n      }\n      return result.toString();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\" className=\"container\">\n        <div className=\"row\">\n            <div class=\"display2\" id=\"display2\">{this.state.display02}</div>\n          </div>\n          <div className=\"row\">\n    <div class=\"display\" id=\"display\">{this.state.display01}</div>\n          </div>\n          <div className=\"row\">\n            {buttons.map((button) => (\n              <button className=\"button\" id={button.id} onClick={this.buttonPressed.bind(this)} value={button.value} >{button.value}</button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}